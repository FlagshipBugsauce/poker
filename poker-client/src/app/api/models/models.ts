/* tslint:disable */
import {ActiveStatus} from './active-status';
import {ApiError} from './api-error';
import {ApiSuccess} from './api-success';
import {AuthRequest} from './auth-request';
import {AuthResponse} from './auth-response';
import {Card} from './card';
import {ChatMessage} from './chat-message';
import {ClientMessage} from './client-message';
import {ClientUser} from './client-user';
import {CurrentGame} from './current-game';
import {Deal} from './deal';
import {Deck} from './deck';
import {DrawGameDataContainer} from './draw-game-data-container';
import {DrawGameDraw} from './draw-game-draw';
import {Game} from './game';
import {GameActionData} from './game-action-data';
import {GameList} from './game-list';
import {GameParameter} from './game-parameter';
import {GamePlayer} from './game-player';
import {GenericServerMessage} from './generic-server-message';
import {HandSummary} from './hand-summary';
import {HideCards} from './hide-cards';
import {JwtAuthRequest} from './jwt-auth-request';
import {Lobby} from './lobby';
import {LobbyPlayer} from './lobby-player';
import {NewAccount} from './new-account';
import {Player} from './player';
import {PokerTable} from './poker-table';
import {Pot} from './pot';
import {PrivateTopic} from './private-topic';
import {TableControls} from './table-controls';
import {Timer} from './timer';
import {Toast} from './toast';
import {ToastClass} from './toast-class';
import {User} from './user';
import {WebSocketInfo} from './web-socket-info';
import {WebSocketUpdate} from './web-socket-update';
import {Winner} from './winner';

export interface Models {
  activeStatus?: ActiveStatus;
  apiError?: ApiError;
  apiSuccess?: ApiSuccess;
  authRequest?: AuthRequest;
  authResponse?: AuthResponse;
  card?: Card;
  cardSuit?: 'Spades' | 'Hearts' | 'Clubs' | 'Diamonds' | 'Back';
  cardValue?: 'Ace' | 'King' | 'Queen' | 'Jack' | 'Ten' | 'Nine' | 'Eight' | 'Seven' | 'Six' | 'Five' | 'Four' | 'Three' | 'Two' | 'Back';
  chatMessage?: ChatMessage;
  clientMessage?: ClientMessage;
  clientUser?: ClientUser;
  currentGame?: CurrentGame;
  deal?: Deal;
  deck?: Deck;
  drawGameDataContainer?: DrawGameDataContainer;
  drawGameDrawModel?: DrawGameDraw;
  game?: Game;
  gameAction?: 'Fold' | 'Check' | 'AllInCheck' | 'Call' | 'Raise';
  gameActionData?: GameActionData;
  gameList?: GameList;
  gameParameter?: GameParameter;
  gamePhase?: 'Lobby' | 'Play' | 'Over';
  gamePlayer?: GamePlayer;
  genericServerMessage?: GenericServerMessage;
  handSummary?: HandSummary;
  hideCards?: HideCards;
  jwtAuthRequest?: JwtAuthRequest;
  lobby?: Lobby;
  lobbyPlayer?: LobbyPlayer;
  messageType?: 'Debug' | 'GameList' | 'Lobby' | 'Game' | 'Hand' | 'GameData' | 'PlayerData' | 'Toast' | 'ReadyToggled' | 'PlayerJoinedLobby' | 'PlayerLeftLobby' | 'GamePhaseChanged' | 'HandStarted' | 'PlayerAwayToggled' | 'HandActionPerformed' | 'ActingPlayerChanged' | 'GamePlayer' | 'CardDrawnByPlayer' | 'StartTurnTimer' | 'PokerTable' | 'Deal' | 'Timer' | 'HideCards' | 'Cards';
  newAccount?: NewAccount;
  player?: Player;
  pokerTable?: PokerTable;
  pot?: Pot;
  privateTopic?: PrivateTopic;
  tableControls?: TableControls;
  timer?: Timer;
  toast?: Toast;
  toastClass?: ToastClass;
  user?: User;
  userGroup?: 'Administrator' | 'Client' | 'Guest';
  webSocketInfo?: WebSocketInfo;
  webSocketUpdate?: WebSocketUpdate;
  winner?: Winner;
}
